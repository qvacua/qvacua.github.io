<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I should cocoa ― Tae Won Ha</title>
    <link>http://ishouldcocoa.net/</link>
    <description>Recent content on I should cocoa ― Tae Won Ha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Mar 2019 10:42:10 +0100</lastBuildDate>
    
	<atom:link href="http://ishouldcocoa.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parallel map for arrays in Swift</title>
      <link>http://ishouldcocoa.net/2019/03/parallel-map-for-arrays-in-swift/</link>
      <pubDate>Thu, 28 Mar 2019 10:42:10 +0100</pubDate>
      
      <guid>http://ishouldcocoa.net/2019/03/parallel-map-for-arrays-in-swift/</guid>
      <description>I needed a parallel map for parallel computation of glyphs in VimR. I use the following (I don&amp;rsquo;t need any throwing transformations)
extension RandomAccessCollection where Index == Int { func parallelMap&amp;lt;T&amp;gt;( chunkSize: Int = 1, _ transform: @escaping (Element) -&amp;gt; T ) -&amp;gt; [T] { let count = self.count guard count &amp;gt; chunkSize else { return self.map(transform) } var result = Array&amp;lt;T?&amp;gt;(repeating: nil, count: count) result.withUnsafeMutableBufferPointer { pointer in if chunkSize == 1 { DispatchQueue.</description>
    </item>
    
    <item>
      <title>Strange interaction between CTFontManager and NSFontManager</title>
      <link>http://ishouldcocoa.net/2019/03/strange-interaction-between-ctfontmanager-and-nsfontmanager/</link>
      <pubDate>Tue, 26 Mar 2019 10:22:26 +0100</pubDate>
      
      <guid>http://ishouldcocoa.net/2019/03/strange-interaction-between-ctfontmanager-and-nsfontmanager/</guid>
      <description>On macOS 10.14 there seems to be a bug in the Core Text framework. When I use NSFontManager to check the availability of a font before loading it using CTFontManager, I get a strange behavior and possibly a memory leak. When using a Cocoa port of thii/FontAwesome.swift for VimR, I noticed that the FontAwesome font files are loaded over and over again. Even after the main window instance is deinited, the memory used to load the font files seems to stay as shown in the following Instruments screenshot</description>
    </item>
    
  </channel>
</rss>